{% extends 'base.html.twig' %}

{% block body %}
    {{ dump(data) }}
{% endblock %}
{% block javascripts %}
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>
        var margin = {top: 20, right: 20, bottom: 70, left: 40},
                {#width = /*600*/{{ cols*20 }} -margin.left - margin.right,#}
                width = 600 -margin.left - margin.right,
                height = 300 - margin.top - margin.bottom;
        // Parse the date / time
        //        var	parseDate = d3.time.format("%Y-%m").parse;
        var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);
        var y = d3.scale.linear().range([height, 0]);
        var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")
                {#.tickFormat(/*d3.time.format("%Y-%m")*/{{ cols }});#}
                .ticks(/*d3.time.format("%Y-%m")*/10);
        var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .ticks(10);
        var svg = d3.select("body2")/*.append("div")
         .attr("id", function() { return "grafico"; })
         .attr("width", width/2 + margin.left + margin.right)
         .attr("height", height +15 + margin.top + margin.bottom)
         .style("overflow", "auto")*/
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .style("margin-left", "30px")
                .append("g")
                .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");
        data.forEach(function (d) {
            d.value = +d.value;
//                d.date = d.date;
        });
        x.domain(data.map(function (d) {
            return d.value;
        }));
        y.domain([0, d3.max(data, function (d) {
            return d.date;
        })]);
        svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .style("text-anchor", "end")
                .attr("dx", "-.8em")
                .attr("dy", "-.55em")
                .attr("transform", "rotate(-90)");
        svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", "-3.71em")
                .attr("dx", "3em")
                .style("text-anchor", "end")
                .text("num. pel√≠culas");
        svg.selectAll("bar")
                .data(data)
                .enter().append("rect")
                .style("fill", "steelblue")
//                    .attr("x", function(d) { return x(d.date); })
                .attr("x", function (d) {
                    return x(d.value);
                })
                .attr("width", x.rangeBand())
//                    .attr("y", function(d) { return y(d.value); })
                .attr("y", function (d) {
                    return y(d.date);
                })
//                    .attr("height", function(d) { return height - y(d.value); });
                .attr("height", function (d) {
                    return height - y(d.date);
                });
    </script>
{% endblock %}